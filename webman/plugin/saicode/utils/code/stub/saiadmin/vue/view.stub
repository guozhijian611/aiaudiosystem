<template>
  <component
    is="a-drawer"
    v-model:visible="visible"
    :width="tool.getDevice() === 'mobile' ? '100%' : '60%'"
    title="查看详情"
    :footer="false">
    <!-- 详情 start -->
    <a-spin :loading="loading" class="w-full">
      <a-descriptions :column="1" bordered>
{% for column in columns %}
{% if column.is_edit == 2 %}
{% if column.view_type == 'saSelect' or column.view_type == 'radio' %}
        <a-descriptions-item label="{{column.column_comment}}">
          <sa-dict :value="formData?.{{column.column_name}}" dict="{{column.dict_type}}" render="span" />
        </a-descriptions-item>
{% elseif column.view_type == 'wangEditor' %}
        <a-descriptions-item label="{{column.column_comment}}">
          <div v-html="formData?.{{column.column_name}}"></div>
        </a-descriptions-item>
{% elseif column.view_type == 'uploadImage' %}
        <a-descriptions-item label="{{column.column_comment}}">
{% if column.options.multiple == true %}
          <div class="flex flex-column">
            <img v-for="(item, index) in formData?.{{column.column_name}}" :src="item" :key="index" style="width: 200px" />
          </div>
{% else %}
          <img :src="formData?.{{column.column_name}}" style="width: 200px" />
{% endif %}
        </a-descriptions-item>
{% else %}
        <a-descriptions-item label="{{column.column_comment}}">
          <div v-text="formData?.{{column.column_name}}"></div>
        </a-descriptions-item>
{% endif %}
{% endif %}
{% endfor %}
      </a-descriptions>
    </a-spin>
    <!-- 详情 end -->
  </component>
</template>

<script setup>
import { ref, reactive } from 'vue'
import tool from '@/utils/tool'
{% if package_name == '' %}
import api from '../api/{{business_name}}'
{% else %}
import api from '../../api/{{package_name}}/{{business_name}}'
{% endif %}

const emit = defineEmits(['success'])

// 引用定义
const rowData = ref()
const formData = ref()
const visible = ref(false)
const loading = ref(false)

// 打开弹框
const open = async (record) => {
  rowData.value = record
  formData.value = {}
  visible.value = true
  await initPage()
}

// 初始化页面数据
const initPage = async () => {
  loading.value = true
  const resp = await api.read(rowData.value?.id)
  if (resp.code === 200) {
    formData.value = resp.data
  }
  loading.value = false
}

defineExpose({ open })
</script>
